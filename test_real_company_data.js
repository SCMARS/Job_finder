const path = require('path');
require('dotenv').config({ path: path.join(__dirname, '.env') });

// –°–∏–º—É–ª–∏—Ä—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const realCompanyData = {
  companyName: 'Stiegler Personalmanagement GmbH',
  contactPerson: 'Herr Thomas Stiegler',
  address: 'Katzwanger Stra√üe 150, 90461 N√ºrnberg, Mittelfranken',
  phone: '+49 911 86045563',
  email: 'bewerbung@stiegler-pm.de',
  website: 'https://stiegler-pm.de'
};

// –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
function testRegexPatterns() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏...\n');
  
  const testText = `
    ${realCompanyData.companyName}
    ${realCompanyData.contactPerson}
    ${realCompanyData.address}
    Telefon: ${realCompanyData.phone}
    E-Mail: ${realCompanyData.email}
    Homepage: ${realCompanyData.website}
  `;
  
  console.log('üìù –¢–µ—Å—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç:');
  console.log(testText);
  console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
  
  // –¢–µ—Å—Ç 1: –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–≥–æ –ª–∏—Ü–∞
  const contactPersonRegex = /(Herr|Frau)\s+([A-Z√Ñ√ñ√ú][a-z√§√∂√º√ü]+(?:\s+[A-Z√Ñ√ñ√ú][a-z√§√∂√º√ü]+)*)/i;
  const contactPersonMatch = testText.match(contactPersonRegex);
  console.log('üë§ –ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ:');
  console.log('   Regex:', contactPersonRegex.source);
  console.log('   –†–µ–∑—É–ª—å—Ç–∞—Ç:', contactPersonMatch ? contactPersonMatch[0] : '–ù–µ –Ω–∞–π–¥–µ–Ω–æ');
  console.log('   –û–∂–∏–¥–∞–ª–æ—Å—å:', realCompanyData.contactPerson);
  console.log('   ‚úÖ –°—Ç–∞—Ç—É—Å:', contactPersonMatch ? '–ü–†–û–ô–î–ï–ù' : '‚ùå –ü–†–û–í–ê–õ–ï–ù');
  
  // –¢–µ—Å—Ç 2: –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞
  const addressRegex = /([A-Z√Ñ√ñ√ú][a-z√§√∂√º√ü\s]+(?:stra√üe|str\.|platz|weg|gasse|allee|ring)\s+\d+[a-z]?)\s+(\d{5})\s+([A-Z√Ñ√ñ√ú][a-z√§√∂√º√ü\s]+)/i;
  const addressMatch = testText.match(addressRegex);
  console.log('\nüìç –ê–¥—Ä–µ—Å –∫–æ–º–ø–∞–Ω–∏–∏:');
  console.log('   Regex:', addressRegex.source);
  if (addressMatch) {
    console.log('   –£–ª–∏—Ü–∞:', addressMatch[1].trim());
    console.log('   –ò–Ω–¥–µ–∫—Å:', addressMatch[2]);
    console.log('   –ì–æ—Ä–æ–¥:', addressMatch[3].trim());
    console.log('   –ü–æ–ª–Ω—ã–π –∞–¥—Ä–µ—Å:', `${addressMatch[1].trim()}, ${addressMatch[2]} ${addressMatch[3].trim()}`);
  } else {
    console.log('   –†–µ–∑—É–ª—å—Ç–∞—Ç: –ù–µ –Ω–∞–π–¥–µ–Ω');
  }
  console.log('   –û–∂–∏–¥–∞–ª–æ—Å—å:', realCompanyData.address);
  console.log('   ‚úÖ –°—Ç–∞—Ç—É—Å:', addressMatch ? '–ü–†–û–ô–î–ï–ù' : '‚ùå –ü–†–û–í–ê–õ–ï–ù');
  
  // –¢–µ—Å—Ç 3: –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
  const phoneRegex = /Telefon\s*:\s*([+0-9\s()\-]{8,})/i;
  const phoneMatch = testText.match(phoneRegex);
  console.log('\nüìû –¢–µ–ª–µ—Ñ–æ–Ω:');
  console.log('   Regex:', phoneRegex.source);
  console.log('   –†–µ–∑—É–ª—å—Ç–∞—Ç:', phoneMatch ? phoneMatch[1] : '–ù–µ –Ω–∞–π–¥–µ–Ω');
  console.log('   –û–∂–∏–¥–∞–ª–æ—Å—å:', realCompanyData.phone);
  console.log('   ‚úÖ –°—Ç–∞—Ç—É—Å:', phoneMatch ? '–ü–†–û–ô–î–ï–ù' : '‚ùå –ü–†–û–í–ê–õ–ï–ù');
  
  // –¢–µ—Å—Ç 4: –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ email
  const emailRegex = /E-Mail\s*:\s*([A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,})/i;
  const emailMatch = testText.match(emailRegex);
  console.log('\nüìß Email:');
  console.log('   Regex:', emailRegex.source);
  console.log('   –†–µ–∑—É–ª—å—Ç–∞—Ç:', emailMatch ? emailMatch[1] : '–ù–µ –Ω–∞–π–¥–µ–Ω');
  console.log('   –û–∂–∏–¥–∞–ª–æ—Å—å:', realCompanyData.email);
  console.log('   ‚úÖ –°—Ç–∞—Ç—É—Å:', emailMatch ? '–ü–†–û–ô–î–ï–ù' : '‚ùå –ü–†–û–í–ê–õ–ï–ù');
  
  // –¢–µ—Å—Ç 5: –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–º–ø–∞–Ω–∏–∏
  const companyNameRegex = /^([A-Z√Ñ√ñ√ú][^0-9\n]+(?:GmbH|AG|SE|KG|e\.V\.|mbH|Ltd|Inc|Corp))/;
  const companyNameMatch = testText.match(companyNameRegex);
  console.log('\nüè≠ –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏:');
  console.log('   Regex:', companyNameRegex.source);
  console.log('   –†–µ–∑—É–ª—å—Ç–∞—Ç:', companyNameMatch ? companyNameMatch[1].trim() : '–ù–µ –Ω–∞–π–¥–µ–Ω–æ');
  console.log('   –û–∂–∏–¥–∞–ª–æ—Å—å:', realCompanyData.companyName);
  console.log('   ‚úÖ –°—Ç–∞—Ç—É—Å:', companyNameMatch ? '–ü–†–û–ô–î–ï–ù' : '‚ùå –ü–†–û–í–ê–õ–ï–ù');
  
  // –¢–µ—Å—Ç 6: –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –≤–µ–±-—Å–∞–π—Ç–∞
  const websiteRegex = /(https?:\/\/[^\s]+)/i;
  const websiteMatch = testText.match(websiteRegex);
  console.log('\nüåê –í–µ–±-—Å–∞–π—Ç:');
  console.log('   Regex:', websiteRegex.source);
  console.log('   –†–µ–∑—É–ª—å—Ç–∞—Ç:', websiteMatch ? websiteMatch[0] : '–ù–µ –Ω–∞–π–¥–µ–Ω');
  console.log('   –û–∂–∏–¥–∞–ª–æ—Å—å:', realCompanyData.website);
  console.log('   ‚úÖ –°—Ç–∞—Ç—É—Å:', websiteMatch ? '–ü–†–û–ô–î–ï–ù' : '‚ùå –ü–†–û–í–ê–õ–ï–ù');
  
  // –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  const totalTests = 6;
  const passedTests = [contactPersonMatch, addressMatch, phoneMatch, emailMatch, companyNameMatch, websiteMatch].filter(Boolean).length;
  
  console.log('\nüìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
  console.log('   –í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤:', totalTests);
  console.log('   –ü—Ä–æ–π–¥–µ–Ω–æ:', passedTests);
  console.log('   –ü—Ä–æ–≤–∞–ª–µ–Ω–æ:', totalTests - passedTests);
  console.log('   –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞:', Math.round((passedTests / totalTests) * 100) + '%');
  
  if (passedTests === totalTests) {
    console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ! –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ.');
  } else {
    console.log('\n‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–µ–Ω—ã. –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π.');
  }
}

// –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞ –∏–∑ webScrapingService
function testAddressExtraction() {
  console.log('\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞...\n');
  
  // –°–∏–º—É–ª–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞
  function extractCompanyAddress(fullText) {
    const addressRegex = /([A-Z√Ñ√ñ√ú][a-z√§√∂√º√ü\s]+(?:stra√üe|str\.|platz|weg|gasse|allee|ring)\s+\d+[a-z]?)\s+(\d{5})\s+([A-Z√Ñ√ñ√ú][a-z√§√∂√º√ü\s]+)/i;
    const addressMatch = fullText.match(addressRegex);
    
    if (addressMatch) {
      return {
        street: addressMatch[1].trim(),
        zipCode: addressMatch[2],
        city: addressMatch[3].trim(),
        fullAddress: `${addressMatch[1].trim()}, ${addressMatch[2]} ${addressMatch[3].trim()}`
      };
    }
    return null;
  }
  
  const testAddresses = [
    'Katzwanger Stra√üe 150, 90461 N√ºrnberg, Mittelfranken',
    'M√ºnchener Stra√üe 123, 80331 M√ºnchen, Bayern',
    'Hamburger Allee 45, 20095 Hamburg',
    'Berliner Platz 7, 10115 Berlin',
    'Frankfurter Ring 89, 90402 N√ºrnberg'
  ];
  
  testAddresses.forEach((address, index) => {
    console.log(`üìç –¢–µ—Å—Ç –∞–¥—Ä–µ—Å–∞ ${index + 1}: ${address}`);
    const extracted = extractCompanyAddress(address);
    if (extracted) {
      console.log(`   ‚úÖ –£—Å–ø–µ—à–Ω–æ –∏–∑–≤–ª–µ—á–µ–Ω–æ:`);
      console.log(`      –£–ª–∏—Ü–∞: ${extracted.street}`);
      console.log(`      –ò–Ω–¥–µ–∫—Å: ${extracted.zipCode}`);
      console.log(`      –ì–æ—Ä–æ–¥: ${extracted.city}`);
      console.log(`      –ü–æ–ª–Ω—ã–π –∞–¥—Ä–µ—Å: ${extracted.fullAddress}`);
    } else {
      console.log(`   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –∞–¥—Ä–µ—Å`);
    }
    console.log('');
  });
}

// –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
console.log('üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏\n');
console.log('=' * 80);

testRegexPatterns();
testAddressExtraction();

console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
console.log('   1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤ –≤—ã—à–µ');
console.log('   2. –ï—Å–ª–∏ –≤—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã - —Å–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ');
console.log('   3. –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–≤–∞–ª–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã - –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è');
console.log('   4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –≤–∞–∫–∞–Ω—Å–∏—è—Ö —Å Arbeitsagentur'); 